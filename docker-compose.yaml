version: '3'

services:
  bot:
    env_file: .env
    image: bot_image:latest
    build:
      context: ./bot
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      bot_network:
        ipv4_address: 10.0.0.2
    ports:
      - "8080:8080"

  db:
    env_file: .env
    image: db_image:latest
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost all all 192.168.10.2/16 password\nhost replication replication 192.168.10.3/16 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres
      -c archive_mode=on
      -c archive_command='cp %p /oracle/pg_data/archive/%f'
      -c listen_addresses='*'
      -c wal_level=replica
      -c hot_standby=on
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c hot_standby_feedback=on
      -c log_replication_commands=on
    networks:
      bot_network:
        ipv4_address: ${DB_HOST}
    ports:
      - "${DB_PORT}:5432"

  db_repl:
    env_file: .env
    image: db_repl_image:latest
    build:
      context: ./db_repl
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGUSER: ${DB_REPL_USER}
      PGPASSWORD: ${DB_REPL_PASSWORD}
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=192.168.10.1 --port=5432
      do
      echo 'Подождите'
      sleep 1s
      done
      echo 'Стартуем'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - db
    networks:
      bot_network:
        ipv4_address: ${DB_REPL_HOST}
    ports:
      - "${DB_REPL_PORT}:5432"

networks:
  bot_network:
    ipam:
      driver: default
      config:
        - subnet: 10.0.0.0/16
